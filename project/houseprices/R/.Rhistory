main="Transformed SalePrice")
text(x = 3.4, y = 6,
paste("skewneww = ", round(skewness(sqrt(log(new.train$SalePrice))), 4)))
text(x = 3.4, y = 5.5,
paste("kurtosis = ", round(kurtosis(sqrt(log(new.train$SalePrice))), 4)))
abline(v = mean(sqrt(log(new.train$SalePrice))), col="blue")
abline(v = median(sqrt(log(new.train$SalePrice))), col="red")
legend(x = 3.5, y = 2,
legend=c("Mean","Median"), col=c("Blue","Red"), lty=1:2, cex=0.7)
qqnorm(y = sqrt(log(new.train$SalePrice)))
qqline(y = sqrt(log(train$SalePrice)), lwd=2, col="red")
# 로그 변환 후 제곱근 변환을 했더니 분포가 정규분포에 근사하고 있으며,
# Q-Q Plot에서도 데이터들이 이론적 분포에 해당하는 빨간 직선에 근접하여 선형적으로 분포하고 있으므로
# 이 분포는 정규분포에 가깝다고 볼 수 있다.
# 이번에는 통계적인 방법으로 정규성 검정을 실시한다.
shapiro.test(sqrt(log(new.train$SalePrice)))
# p-value < 0.05 이므로 통계적으로는 이 분포가 정규분포라고 할 수 없다.
# 하지만 통계량만으로 판단하기에는 부족하므로
# 위의 모든 결과를 고려했을 때 완전한 정규분포는 아니지만 정규분포에 가깝다고 볼 수 있다.
# 다음으로, 표준화를 해준다.
new.train$SalePrice <- sqrt(log(new.train$SalePrice))
new.train$SalePrice <- scale(new.train$SalePrice)
# 마지막으로 이상치를 제거해준다.
UCL <- quantile(x = new.train$SalePrice, probs = 0.99865)
LCL <- quantile(x = new.train$SalePrice, probs = 0.00135)
outlier <- which((new.train$SalePrice >= UCL) | (new.train$SalePrice <= LCL))
new.train <- new.train[-outlier, ]
# 4.57. GarageType ####
table(as.factor(new.train$GarageType))
ggplot() +
geom_histogram(data = new.train, aes(x = SalePrice, fill = GarageType),
binwidth = 30000, colour = "black", alpha = 0.7) +
facet_grid(GarageType ~.)
with(data = new.train, tapply(SalePrice, GarageType, skewness))
with(data = new.train, tapply(SalePrice, GarageType, kurtosis))
# 차고지가 있으면 집 값이 더 비싸다는 것을 알 수 있고,
# 차고지 형태가 Attchd, Detchd인 집이 거래량이 가장 많다는 것을 알 수 있다.
qplot(GarageType, SalePrice, data = new.train,
geom = c("boxplot", "jitter"),
fill = GarageType)
qplot(GarageType, SalePrice, data = subset(new.train, (GarageType == "Attchd" | GarageType == "Detchd" | GarageType == "No Garage" | GarageType == "BuiltIn")),
geom = c("boxplot", "jitter"),
fill = GarageType)
# 집 값의 분포 범위는 차고지 형태가 Builtin일 때 가장 넓다.
qplot(GarageType, SalePrice, data = subset(new.train, (GarageType == "Attchd" | GarageType == "Detchd" | GarageType == "No Garage" | GarageType == "BuiltIn")),
geom = c("boxplot"),
fill = GarageType)
# 차고지 형태별로 집 값을 요약
tapply(new.train$SalePrice, new.train$GarageType, summary)
# ANOVA
# 차고지 형태별 집 값의 평균 차이는 통계적으로 유의함을 알 수 있다.
# 즉, 차고지 형태별 집 값의 평균은 같지 않다고 말할 수 있다.
summary(aov(SalePrice ~ as.factor(GarageType), data = new.train))
# 하지만 등분산성을 만족하지 못하므로 위의 분산분석 결과는 신뢰할 수 없다.
bartlett.test(SalePrice ~ as.factor(GarageType), data = new.train)
# Welch`s ANOVA를 사용하여 차고지 형태별 집 값의 평균 차가 유의한지 확인해본다.
# 검정 결과 차고지 형태별 평균이 동일하지 않음이 통계적으로 유의하다는 것을 알 수 있다.
oneway.test(SalePrice ~ as.factor(GarageType), data = new.train,
var.equal = FALSE)
# 사후 분석을 통해 어떤 차고지 형태의 평균 차가 유의한지 확인해본다.
oneway(as.factor(new.train$GarageType), y = new.train$SalePrice, posthoc = "games-howell")
# 4.58. GarageYrBlt ★★ ####
table(new.train$GarageYrBlt)
# 차고지 유무에 따른 집 값 분포를 보기 위해 GarageYrBlt 변수를 따로 분리하여 변수의 범주를 바꿔준다.
temp <- new.train[, c("GarageYrBlt", "SalePrice")]
temp[which(temp$GarageYrBlt != "No Garage"), "GarageYrBlt"] <- "Yes Garage"
temp$GarageYrBlt <- as.factor(temp$GarageYrBlt)
ggplot() +
geom_histogram(data = temp, aes(x = SalePrice, fill = GarageYrBlt),
binwidth = 30000, colour = "black", alpha = 0.7) +
facet_grid(GarageYrBlt ~.)
# 차고지가 있으면 집 값이 더 비싸며, 집 값 분포 범위도 더 넓다는 것을 시각적으로 확인할 수 있다.
qplot(GarageYrBlt, SalePrice, data = temp,
geom = c("boxplot", "jitter"),
fill = GarageYrBlt)
# 다음은 차고지가 지어진 연도와 집 값의 변화를 알아본다.
Grg.Y <- subset(new.train, GarageYrBlt != "No Garage")
Grg.Y$GarageYrBlt <- as.numeric(Grg.Y$GarageYrBlt)
Grg.Y$GarageYrBlt <- cut(Grg.Y$GarageYrBlt,
breaks = c(1900, 1920, 1940, 1960, 1980, 2000, 2020),
labels = c("1900 ~ 1920", "1920 ~ 1940", "1940 ~ 1960",
"1960 ~ 1980", "1980 ~ 2000", "2000 ~"))
# 대체로 차고지가 지어진지 오래된 집일수록 집 값의 평균이 낮은 것을 확인할 수 있다.
ggplot() +
geom_histogram(data = Grg.Y, aes(x = SalePrice, fill = GarageYrBlt),
binwidth = 30000, colour = "black", alpha = 0.7) +
facet_grid(GarageYrBlt ~.)
qplot(GarageYrBlt, SalePrice, data = Grg.Y,
geom = c("boxplot", "jitter"),
fill = GarageYrBlt)
qplot(GarageYrBlt, SalePrice, data = Grg.Y,
geom = c("boxplot"),
fill = GarageYrBlt)
# 등분산성 검정 결과, p-value < 0.05 이므로 등분산성을 만족하지 못한다.
# Welch`s ANOVA를 사용하여 차고지 형태별 집 값의 평균 차가 유의한지 확인해본다.
bartlett.test(SalePrice ~ as.factor(GarageYrBlt), data = Grg.Y)
# 검정 결과 차고지가 지어진 연도별 집 값의 평균이 동일하지 않음이 통계적으로 유의하다는 것을 알 수 있다.
oneway.test(SalePrice ~ as.factor(GarageYrBlt), data = Grg.Y,
var.equal = FALSE)
# 사후 분석을 통해 어느 카테고리의 평균 집 값 차이가 유의한지 확인해본다.
oneway(as.factor(Grg.Y$GarageYrBlt), y = Grg.Y$SalePrice, posthoc = "games-howell")
# 평균 집 값의 차이가 유의한 세 집단으로 변수를 범주화 해준다.
new.train[new.train$GarageYrBlt != "No Garage", "GarageYrBlt"] <- cut(as.numeric(new.train[new.train$GarageYrBlt != "No Garage", "GarageYrBlt"]),
breaks = c(1900, 1980, 2000, 2040),
labels = c("1900 ~ 1980", "1980 ~ 2000", "2000 ~ "))
new.train <- new.train[-which(!complete.cases(new.train)), ]
qplot(GarageYrBlt, SalePrice, data = new.train,
geom = c("boxplot", "jitter"),
fill = GarageYrBlt)
new.train$GarageYrBlt <- as.factor(new.train$GarageYrBlt)
levels(new.train$GarageYrBlt) <- c("1900 ~ 1980", "1980 ~ 2000", "2000 ~ ", "No Garage")
# 테스트 데이터 셋에 적용
new.test$GarageYrBlt <- as.character(new.test$GarageYrBlt)
new.test[new.test$GarageYrBlt != "No Garage", "GarageYrBlt"] <- cut(as.numeric(new.test[new.test$GarageYrBlt != "No Garage", "GarageYrBlt"]),
breaks = c(1900, 1980, 2000, 2040),
labels = c("1900 ~ 1980", "1980 ~ 2000", "2000 ~ "))
new.test$GarageYrBlt <- as.factor(new.test$GarageYrBlt)
levels(new.test$GarageYrBlt) <- c("1900 ~ 1980", "1980 ~ 2000", "2000 ~ ", "No Garage")
# 4.59. GarageFinish ####
table(as.factor(new.train$GarageFinish))
ggplot() +
geom_histogram(data = new.train, aes(x = SalePrice, fill = GarageFinish),
binwidth = 30000, colour = "black", alpha = 0.7) +
facet_grid(GarageFinish ~.)
# 차고지 유뮤가 집 값에 영향을 준다는 것은 시각적으로 확인할 수 있고,
# 차고지가 완성된 집과 완성되지 않은 집의 집 값 차이도 큰 것을 알 수 있다.
qplot(GarageFinish, SalePrice, data = new.train,
geom = c("boxplot", "jitter"),
fill = GarageFinish)
# 등분산성 검정 결과, p-value < 0.05 이므로 등분산성을 만족하지 못한다.
# Welch`s ANOVA를 사용하여 차고지 완성 상태에 따른 집 값의 평균 차가 유의한지 확인해본다.
bartlett.test(SalePrice ~ as.factor(GarageFinish), data = new.train)
# 검정 결과 차고지 유무와 완성 상태에 따른 집 값의 평균이 동일하지 않음이 통계적으로 유의하다는 것을 알 수 있다.
oneway.test(SalePrice ~ as.factor(GarageFinish), data = new.train,
var.equal = FALSE)
# 사후 분석을 통해 어느 카테고리의 평균 집 값 차이가 유의한지 확인해본다.
oneway(as.factor(new.train$GarageFinish), y = new.train$SalePrice, posthoc = "games-howell")
# 4.60. GarageCars ####
table(as.factor(new.train$GarageCars))
# 수용할 수 있는 차량의 수가 많은 차고지를 가진 집일수록 집 값이 대체로 비싸다는 것을 알 수 있고,
# 수용할 수 있는 차량의 수가 3대인 차고지를 가진 집의 집 값이 가장 넓은 분포를 띄고 있다.
ggplot() +
geom_histogram(data = new.train, aes(x = SalePrice, fill = GarageCars),
binwidth = 30000, colour = "black", alpha = 0.7) +
facet_grid(GarageCars ~.)
# 차량 1~2대를 수용할 수 있는 차고지를 가진 집이 가장 많이 거래되는 것도 알 수 있다.
qplot(as.factor(GarageCars), SalePrice, data = new.train,
geom = c("boxplot", "jitter"),
fill = GarageCars)
# 등분산성 검정 결과, p-value < 0.05 이므로 등분산성을 만족하지 못한다.
# Welch`s ANOVA를 사용하여 차고지 크기에 따른 집 값의 평균 차가 유의한지 확인해본다.
bartlett.test(SalePrice ~ as.factor(GarageCars), data = new.train)
# 검정 결과 차고지 크기에 따른 집 값의 평균이 동일하지 않음이 통계적으로 유의하다는 것을 알 수 있다.
oneway.test(SalePrice ~ as.factor(GarageCars), data = new.train,
var.equal = FALSE)
# 사후 분석을 통해 어느 카테고리의 평균 집 값 차이가 유의한지 확인해본다.
oneway(as.factor(new.train$GarageCars), y = new.train$SalePrice, posthoc = "games-howell")
# 4.61. GarageArea ★★ ####
table(as.factor(new.train$GarageArea))
summary(new.train$GarageArea)
# 차고지 면적이 넓을 수록 대체로 집 값이 증가하는 것을 시각적으로 확인할 수 있다.
ggplot() +
geom_point(data = new.train, aes(x = GarageArea, y = SalePrice, color = GarageCars),
shape = 1, size = 1.5)
# 차고지 면적을 300 단위로 나눠서 집 값과의 관계를 확인해본다.
temp <- new.train[, c("GarageArea", "SalePrice")]
temp$GarageArea <- cut(temp$GarageArea,
breaks = c(0, 300, 600, 900, 1200, 1500),
labels = c("0 ~ 300", "300 ~ 600", "600 ~ 900", "900 ~ 1200", "1200 ~"))
ggplot() +
geom_histogram(data = temp, aes(x = SalePrice, fill = GarageArea),
binwidth = 30000, colour = "black", alpha = 0.7) +
facet_grid(GarageArea ~.)
qplot(GarageArea, SalePrice, data = temp,
geom = c("boxplot", "jitter"),
fill = GarageArea)
# 거래량이 많은 0 ~ 300, 300 ~ 600, 900 ~ 1200 구간의 값만 다시 보면
# 차고지 면적이 넓을수록 평균 집 값이 커지고
# 집 값의 분포 범위도 넓어지는 것을 알 수 있다.
qplot(GarageArea, SalePrice, data = subset(temp, (GarageArea == "0 ~ 300" | GarageArea == "300 ~ 600" | GarageArea == "600 ~ 900")),
geom = c("boxplot", "jitter"),
fill = GarageArea)
# 등분산성 검정 결과, p-value < 0.05 이므로 등분산성을 만족하지 못한다.
# Welch`s ANOVA를 사용하여 차고지 면적에 따른 집 값의 평균 차가 유의한지 확인해본다.
bartlett.test(SalePrice ~ as.factor(GarageArea), data = temp)
# 검정 결과 차고지 면적에 따른 집 값의 평균이 동일하지 않음이 통계적으로 유의하다는 것을 알 수 있다.
oneway.test(SalePrice ~ as.factor(GarageArea), data = temp,
var.equal = FALSE)
# 사후 분석을 통해 어느 카테고리의 평균 집 값 차이가 유의한지 확인해본다.
oneway(as.factor(temp$GarageArea), y = temp$SalePrice, posthoc = "games-howell")
# 두 변수를 범주화하여 관계를 시각화
temp$SalePrice <- cut(temp$SalePrice,
breaks = c(0, 150000, 300000, 450000, 600000, 755000),
labels = c("150000 미만", "150000 ~ 300000", "300000 ~ 450000", "450000 ~ 600000", "600000 이상"))
# 히트맵을 통해 확인해본 결과,
# 차고지 면적이 0 ~ 300인 집들은 대부분 150000 미만의 가격에서 거래되고
# 차고지 면적이 300 ~ 600인 집들은 대부분 300000 미만의 가격에서 거래되고
# 차고지 면적이 600 ~ 900인 집들은 대부분 300000 이상의 가격에서 거래됨을 알 수 있다.
temp.mat <- table(temp$GarageArea, temp$SalePrice)
heatmap(temp.mat, Rowv = NA, Colv = NA,
col = heat.colors(100), scale = "column",
xlab = "SalePrice", ylab = "GarageArea",
margins = c(5, 10))
# 평균 집 값 차이가 유의한 그룹으로 묶이도록 변수를 범주화 해준다.
new.train$GarageArea <- cut(new.train$GarageArea,
breaks = c(0, 300, 600, 2000),
labels = c("0 ~ 300", "300 ~ 600", "600 ~"))
new.train[which(!complete.cases(new.train$GarageArea)), "GarageArea"] <- "0 ~ 300"
qplot(GarageArea, SalePrice, data = new.train,
geom = c("boxplot", "jitter"),
fill = GarageArea)
# 테스트 데이터 셋에 적용
table(new.test$GarageArea, useNA = "ifany")
new.test$GarageArea <- cut(new.test$GarageArea,
breaks = c(0, 300, 600, 2000),
labels = c("0 ~ 300", "300 ~ 600", "600 ~"))
new.test[which(!complete.cases(new.test$GarageArea)), "GarageArea"] <- "0 ~ 300"
# 4.62. GarageQual  ####
table(new.train$GarageQual)
# 차고지 품질이 평균 이상은 되어야 차고지가 없는 집과 평균적인 집 값에 차이가 있다는 정도를 시각적으로 확인할 수 있다.
qplot(GarageQual, SalePrice, data = new.train,
geom = c("boxplot", "jitter"),
fill = GarageQual)
# 등분산성 검정 결과, p-value > 0.05 이므로 등분산성을 만족한다.
bartlett.test(SalePrice ~ as.factor(GarageQual), data = new.train)
# 검정 결과 차고지 품질에 따른 집 값의 평균이 동일하지 않음이 통계적으로 유의하다는 것을 알 수 있다.
oneway.test(SalePrice ~ as.factor(GarageQual), data = new.train,
var.equal = TRUE)
# 사후 분석을 통해 어느 카테고리의 평균 집 값 차이가 유의한지 확인해본다.
oneway(as.factor(new.train$GarageQual), y = new.train$SalePrice, posthoc = "tukey")
# 4.63. GarageCond  ####
table(new.train$GarageCond)
# 뚜렷한 특징을 확인할 수가 없다.
# 차고지 상태가 평균 이상은 되어야 차고지가 없는 집과 평균적인 집 값에 차이가 있다는 정도를 시각적으로 확인할 수 있다.
qplot(GarageCond, SalePrice, data = new.train,
geom = c("boxplot", "jitter"),
fill = GarageCond)
# 등분산성 검정 결과, p-value > 0.05 이므로 등분산성을 만족한다.
bartlett.test(SalePrice ~ as.factor(GarageCond), data = new.train)
# 검정 결과 차고지 상태에 따른 집 값의 평균이 동일하지 않음이 통계적으로 유의하다는 것을 알 수 있다.
oneway.test(SalePrice ~ as.factor(GarageCond), data = new.train,
var.equal = TRUE)
# 사후 분석을 통해 어느 카테고리의 평균 집 값 차이가 유의한지 확인해본다.
oneway(as.factor(new.train$GarageCond), y = new.train$SalePrice, posthoc = "tukey")
# 4.64. PaveDrive ★★ ####
table(new.train$PavedDrive)
# 시각적으로 봤을 때 포장된 도로가 있을 때와 없을 때 집 값에 차이가 있는 것처럼 보여진다.
qplot(PavedDrive, SalePrice, data = new.train,
geom = c("boxplot", "jitter"),
fill = PavedDrive)
# 등분산성 검정 결과, p-value > 0.05 이므로 등분산성을 만족한다.
bartlett.test(SalePrice ~ as.factor(PavedDrive), data = new.train)
# 검정 결과 포장 도로 유무에 따른 집 값의 평균이 동일하지 않음이 통계적으로 유의하다는 것을 알 수 있다.
oneway.test(SalePrice ~ as.factor(PavedDrive), data = new.train,
var.equal = TRUE)
# 사후 분석을 통해 어느 카테고리의 평균 집 값 차이가 유의한지 확인해본다.
oneway(as.factor(new.train$PavedDrive), y = new.train$SalePrice, posthoc = "tukey")
# 평균 집 값 차이가 유의한 그룹으로 묶이도록 변수를 범주화 해준다.
new.train[which((new.train$PavedDrive == "N") | (new.train$PavedDrive == "P")), "PavedDrive"] <- "Partial or Not"
# 테스트 데이터 셋에 적용
table(new.test$PavedDrive, useNA = "ifany")
new.test[which((new.test$PavedDrive == "N") | (new.test$PavedDrive == "P")), "PavedDrive"] <- "Partial or Not"
# 4.65. WoodDeckSF ####
table(new.train$WoodDeckSF)
summary(new.train$WoodDeckSF)
# 뚜렷한 특징을 찾기가 힘들다.
ggplot() +
geom_point(data = new.train, aes(x = WoodDeckSF, y = SalePrice, color = WoodDeckSF),
shape = 1, size = 1.5)
# 우드덱 면적을 0 ~ 400까지 100 단위로 나눠서 집 값과의 관계를 확인해본다.
temp <- new.train[, c("WoodDeckSF", "SalePrice")]
temp$WoodDeckSF <- cut(temp$WoodDeckSF,
breaks = c(0, 100, 200, 300, 400),
labels = c("0 ~ 100", "100 ~ 200", "200 ~ 300", "300 ~ 400"))
ggplot() +
geom_histogram(data = temp, aes(x = SalePrice, fill = WoodDeckSF),
binwidth = 30000, colour = "black", alpha = 0.7) +
facet_grid(WoodDeckSF ~.)
# 우드덱이 없는 집보다는 우드덱이 있는 집이 대체로 가격이 높은 것처럼 보이기는 하지만
# 우드덱 면적에 따라 집 값이 크게 변하는 것처럼 보여지지는 않고,
# 면적에 따른 집 값의 차이도 유의미한지는 통계적으로 분석해봐야할 것같다.
qplot(WoodDeckSF, SalePrice, data = temp,
geom = c("boxplot", "jitter"),
fill = WoodDeckSF)
# 등분산성 검정 결과, p-value < 0.05 이므로 등분산성을 만족하지 못한다.
bartlett.test(SalePrice ~ as.factor(PavedDrive), data = new.train)
# Welch`s ANOVA를 사용하여 포장 도로 유무에 따른 집 값의 평균 차가 유의한지 확인해본다.
# 검정 결과 포장 도로 유무에 따른 집 값의 평균이 동일하지 않음이 통계적으로 유의하다는 것을 알 수 있다.
oneway.test(SalePrice ~ as.factor(PavedDrive), data = new.train,
var.equal = FALSE)
# 사후 분석을 통해 어느 카테고리의 평균 집 값 차이가 유의한지 확인해본다.
oneway(as.factor(new.train$PavedDrive), y = new.train$SalePrice, posthoc = "games-howell")
# 4.66. OpenPorchSF ####
table(new.train$OpenPorchSF)
summary(new.train$OpenPorchSF)
# 뚜렷한 특징을 찾기가 힘들다.
ggplot() +
geom_point(data = new.train, aes(x = OpenPorchSF, y = SalePrice, color = OpenPorchSF),
shape = 1, size = 1.5)
# 현관 면적을 0 ~ 200까지 50 단위로 나눠서 집 값과의 관계를 확인해본다.
temp <- new.train[, c("OpenPorchSF", "SalePrice")]
temp$OpenPorchSF <- cut(temp$OpenPorchSF,
breaks = c(0, 50, 100, 150, 200),
labels = c("0 ~ 50", "50 ~ 100", "100 ~ 150", "150 ~ 200"))
# 현관이 없는 집과 있는 집의 평균적인 집 값의 차이는 있어보이지만
# 똑같이 현관이 있는 집이라면 현관의 면적이 집 값에 영향을 주는 것처럼 보이지는 않는다.
ggplot() +
geom_histogram(data = temp, aes(x = SalePrice, fill = OpenPorchSF),
binwidth = 30000, colour = "black", alpha = 0.7) +
facet_grid(OpenPorchSF ~.)
qplot(OpenPorchSF, SalePrice, data = temp,
geom = c("boxplot", "jitter"),
fill = OpenPorchSF)
which(!complete.cases(new.train$OpenPorchSF))
table(new.train$OpenPorchSF)
# 등분산성 검정 결과, p-value < 0.05 이므로 등분산성을 만족하지 못한다.
bartlett.test(SalePrice ~ as.factor(OpenPorchSF), data = temp)
# Welch`s ANOVA를 사용하여 현관 면적에 따른 집 값의 평균 차가 유의한지 확인해본다.
# 검정 결과 현관 면적에 따른 집 값의 평균이 동일하지 않음이 통계적으로 유의하다는 것을 알 수 있다.
oneway.test(SalePrice ~ as.factor(OpenPorchSF), data = temp,
var.equal = FALSE)
# 사후 분석을 통해 어느 카테고리의 평균 집 값 차이가 유의한지 확인해본다.
oneway(as.factor(temp$OpenPorchSF), y = temp$SalePrice, posthoc = "games-howell")
# 4.67. EnclosedPorch ####
summary(new.train$EnclosedPorch)
# 뚜렷한 특징을 찾기가 힘들다.
ggplot() +
geom_point(data = new.train, aes(x = EnclosedPorch, y = SalePrice, color = EnclosedPorch),
shape = 1, size = 1.5)
# 현관 면적을 0 ~ 300까지 50 단위로 나눠서 집 값과의 관계를 확인해본다.
temp <- new.train[, c("EnclosedPorch", "SalePrice")]
temp$EnclosedPorch <- cut(temp$EnclosedPorch,
breaks = c(0, 50, 100, 150, 200, 250, 300),
labels = c("0 ~ 50", "50 ~ 100", "100 ~ 150", "150 ~ 200", "200 ~ 250", "250 ~ 300"))
# 마찬가지로 특징을 찾기가 어렵다.
ggplot() +
geom_histogram(data = temp, aes(x = SalePrice, fill = EnclosedPorch),
binwidth = 30000, colour = "black", alpha = 0.7) +
facet_grid(EnclosedPorch ~.)
# EnclosedPorch 변수는 집 값과 상관이 없는 것처럼 보인다.
qplot(EnclosedPorch, SalePrice, data = temp,
geom = c("boxplot", "jitter"),
fill = EnclosedPorch)
# 등분산성 검정 결과, p-value > 0.05 이므로 등분산성을 만족한다.
bartlett.test(SalePrice ~ as.factor(EnclosedPorch), data = temp)
# Welch`s ANOVA를 사용하여 현관 면적에 따른 집 값의 평균 차가 유의한지 확인해본다.
# 검정 결과 현관 면적에 상관 없이 집 값의 평균은 동일함을 통계적으로 확인할 수 있다.
oneway.test(SalePrice ~ as.factor(EnclosedPorch), data = temp,
var.equal = TRUE)
# 4.68. X3SsnPorch ####
summary(new.train$X3SsnPorch)
# 뚜렷한 특징을 찾기가 힘들다.
ggplot() +
geom_point(data = new.train, aes(x = X3SsnPorch, y = SalePrice, color = X3SsnPorch),
shape = 1, size = 1.5)
# 4.69. ScreenPorch ####
summary(new.train$ScreenPorch)
# 뚜렷한 특징을 찾기가 힘들다.
ggplot() +
geom_point(data = new.train, aes(x = ScreenPorch, y = SalePrice, color = ScreenPorch),
shape = 1, size = 1.5)
# 4.70. PoolQC ####
table(new.train$PoolQC)
# 뚜련한 특징을 찾을 수 없다.
ggplot() +
geom_histogram(data = new.train, aes(x = SalePrice, fill = PoolQC),
binwidth = 30000, colour = "black", alpha = 0.7) +
facet_grid(PoolQC ~.)
# 수영장은 집 값에 영향을 주지 않는 것같다.
qplot(PoolQC, SalePrice, data = new.train,
geom = c("boxplot", "jitter"),
fill = PoolQC)
# 등분산성 검정 결과, p-value > 0.05 이므로 등분산성을 만족한다.
bartlett.test(SalePrice ~ as.factor(PoolQC), data = new.train)
# 검정 결과 수영장 상태에 따른 집 값의 평균이 동일하지 않음이 통계적으로 유의하다는 것을 알 수 있다.
oneway.test(SalePrice ~ as.factor(PoolQC), data = new.train,
var.equal = TRUE)
# 사후 분석을 통해 어느 카테고리의 평균 집 값 차이가 유의한지 확인해본다.
# 수영장 상태가 매우 좋은 집과 수영장이 없는 집의 평균 집 값의 차이만 유의하다.
oneway(as.factor(new.train$PoolQC), y = sqrt(log(new.train$SalePrice)), posthoc = "tukey")
# 4.71. PoolArea ####
summary(new.train$PoolArea)
# 뚜렷한 특징을 찾기가 힘들다.
# 큰 수영장이 있다고 집 값이 비싸지거나 하지는 않는 것같다.
ggplot() +
geom_point(data = new.train, aes(x = PoolArea, y = SalePrice, color = PoolArea),
shape = 1, size = 1.5)
# 4.72. Fence ★★ ####
table(new.train$Fence)
# 펜스의 유무가 집 값에 영향을 주는 것처럼 보이지는 않는다.
qplot(Fence, SalePrice, data = new.train,
geom = c("boxplot", "jitter"),
fill = Fence)
# 등분산성 검정 결과, p-value < 0.05 이므로 등분산성을 만족하지 못한다.
bartlett.test(SalePrice ~ as.factor(Fence), data = new.train)
# Welch`s ANOVA를 사용하여 펜스 유무에 따른 집 값의 평균 차가 유의한지 확인해본다.
# 검정 결과 펜스 유무에 따른 집 값의 평균이 동일하지 않음이 통계적으로 유의하다는 것을 알 수 있다.
oneway.test(SalePrice ~ as.factor(Fence), data = new.train,
var.equal = FALSE)
# 사후 분석을 통해 어느 카테고리의 평균 집 값 차이가 유의한지 확인해본다.
oneway(as.factor(new.train$Fence), y = new.train$SalePrice, posthoc = "games-howell")
# 펜스의 유무로 데이터를 범주화 해준다.
new.train[which(new.train$Fence != "No Fence"), "Fence"] <- "Yes Fence"
# 테스트 데이터 셋에 적용
table(new.test$Fence, useNA = "ifany")
new.test[which(new.test$Fence != "No Fence"), "Fence"] <- "Yes Fence"
# 4.73. MiscFeature ####
table(new.train$MiscFeature)
# 다른 기타 기능들도 집 값에는 영향을 주지 않는 것처럼 보인다.
ggplot() +
geom_histogram(data = new.train, aes(x = SalePrice, fill = MiscFeature),
binwidth = 30000, colour = "black", alpha = 0.7) +
facet_grid(MiscFeature ~.)
# 4.74. MiscVal ####
summary(new.train$MiscVal)
# 전체적으로 보면 기타 기능의 유무와 집 값은 특별한 관계가 없지만
# 기타 기능을 가진 집이라면
# 기타 기능의 가치가 높을수록 집 값이 높아지는 경향이 있는 것처럼 보인다.
ggplot() +
geom_point(data = new.train, aes(x = MiscVal, y = SalePrice, color = MiscVal),
shape = 1, size = 1.5)
# 4.75. MoSold ####
# 4.76. YrSold ####
# 4.77. SaleType ####
# 4.78. SaleCondition ####
eda1.train <- new.train
eda1.test  <- new.test
# 준희 EDA ####
str(new.train)
eda_1 <-colnames(new.train)[2:21]
eda_1 <-c(eda_1)
eda_df_1 <- new.train[,eda_1]
eda_df_1$SalePrice <- new.train$SalePrice
# 밀도 함수 그래프를 그려주는 함수
density_plotting <- function(category, numeri){
ggplot(data = eda_df_1, aes(x = numeri)) + geom_density(aes(group = category, colour = category, fill = category), alpha = 0.3)
}
# 박스 플랏을 그려주는 함수
box_jitter <- function(category, numeri){
qplot(category, numeri, geom = c('boxplot','jitter'), fill = category)
}
par(mfrow = c(1,1))
# 4.1. MSSubClass ####
table(eda_df_1$MSSubClass)
#수치형이지만 빌딩의 클래스를 나타내기 때문에 이를 범주형으로 판단했다.
eda_df_1$MSSubClass <- as.factor(eda_df_1$MSSubClass)
plot(eda_df_1$MSSubClass, eda_df_1$SalePrice)
#간단한 박스플럿을 통해 확인해 본 결과 특히 20,60,120에서 차이가 나타난다는 것을 알 수 있다.
#해당 클래스는 다른 클래스에 비해 데이터의 양이 크다는 것을 앞서 테이블을 통해 확인 가능하다.
bartlett.test(eda_df_1$SalePrice ~ eda_df_1$MSSubClass)
#등분산이 아니다
oneway.test(SalePrice ~ MSSubClass,data = eda_df_1, var.equal = FALSE)
#유의한 변수임을 알 수 있음
#각 클래스별 밀도함수를 그려서 파악해본다.
density_plotting(eda_df_1$MSSubClass, eda_df_1$SalePrice)
# 사후 분석을 통해 어느 카테고리의 평균 집 값 차이가 유의한지 확인해본다.
oneway(eda_df_1$MSSubClass, y = new.train$SalePrice, posthoc = "games-howell")
# 집 값의 평균 차이가 유의하지 않은 범주들을 하나로 묶어준다.
eda_df_1$MSSubClass <- as.character(eda_df_1$MSSubClass)
#바꾸기 용의하도록 charater형으로 변환해준다.
eda_df_1[which((eda_df_1$MSSubClass == 40) | (eda_df_1$MSSubClass == 45)), "MSSubClass"] <- 40
eda_df_1[which((eda_df_1$MSSubClass == 70) | (eda_df_1$MSSubClass == 75)), "MSSubClass"] <- 70
eda_df_1[which((eda_df_1$MSSubClass == 80) | (eda_df_1$MSSubClass == 85)), "MSSubClass"] <- 80
#평균차이가 거의 없는 범주는 묶어준다.
plot(as.factor(eda_df_1$MSSubClass), eda_df_1$SalePrice)
bartlett.test(SalePrice ~ MSSubClass, data = eda_df_1)
#등분산이 아니다
oneway.test(SalePrice ~ MSSubClass,data = eda_df_1, var.equal = FALSE)
#유의한 변수임을 알 수 있음
# 사후 분석을 통해 어느 카테고리의 평균 집 값 차이가 유의한지 확인해본다.
oneway(as.factor(eda_df_1$MSSubClass), y = eda_df_1$SalePrice, posthoc = "games-howell")
eda_df_1[which((eda_df_1$MSSubClass == 70)  | (eda_df_1$MSSubClass == 80)  | (eda_df_1$MSSubClass == 90)), "MSSubClass"] <- "70 ~ 90"
eda_df_1[which((eda_df_1$MSSubClass == 160) | (eda_df_1$MSSubClass == 180) | (eda_df_1$MSSubClass == 190)), "MSSubClass"] <- "160 ~ 190"
eda_df_1[which((eda_df_1$MSSubClass == 30) | (eda_df_1$MSSubClass == 40)), "MSSubClass"] <- "30 ~ 40"
# 사후 분석을 통해 어느 카테고리의 평균 집 값 차이가 유의한지 확인해본다.
oneway(as.factor(eda_df_1$MSSubClass), y = eda_df_1$SalePrice, posthoc = "games-howell")
eda_df_1$MSSubClass <- as.factor(eda_df_1$MSSubClass)
#결과적으로 7개의 범주로 축약했다.
# 4.2. MSZoning ★★ ####
table(eda_df_1$MSZoning)
plot(as.factor(eda_df_1$MSZoning), eda_df_1$SalePrice)
#박스플럿을 그렷을 때 가격의 평균은 크게 차이가 안나지만 RL에 이상치가 많은 것을
#알 수 있다. 이를 파악해보기 위한 density plot을 그려본다.
density_plotting(eda_df_1$MSZoning, eda_df_1$SalePrice)
#집단간 평균의 차이가 보이긴 하지만 유의한지 알수 없다.
#따라서 anova로 이를 검정해보도록 한다.
bartlett.test(eda_df_1$SalePrice~eda_df_1$MSSubClass)
#등분산이 아니다.
oneway.test(SalePrice~MSZoning, data = eda_df_1, var.equal = F)
#유의한 변수이다.
#사분 분석을 통해 어느 카테고리의 평균값 차이가 유의한지 알아본다.
oneway(as.factor(eda_df_1$MSZoning), y = eda_df_1$SalePrice, posthoc = "games-howell")
#RH-RM의 경우 0.971로 두 집단간 차이가 유의하지 않다. 따라서 집단을 RMH로 합치겟다 .
eda_df_1[which((eda_df_1$MSZoning == 'RH') | (eda_df_1$MSZoning == 'RM') | (eda_df_1$MSZoning == 'C')),'MSZoning'] <- 'C or RM or RH'
#세 개의 범주로 축약했다.
bartlett.test(eda_df_1$SalePrice~eda_df_1$MSSubClass)
# 4.3. Street ####
table(eda_df_1$Street)
plot(as.factor(eda_df_1$Street), eda_df_1$SalePrice)
#평균은 큰차이를 보이지 않으나 Pave에 이상치가 많이 나타나는 것을 볼 수 있다.
density_plotting(eda_df_1$Street, eda_df_1$SalePrice)
bartlett.test(eda_df_1$SalePrice~eda_df_1$Street)
#등분산을 만족한다.
summary(aov(eda_df_1$SalePrice~eda_df_1$Street, data = eda_df_1))
#상대적으로 유의하지 않으며, Grvl의 개수가 너무 적기 때문에 이를 무시도록 한다.
oneway(as.factor(eda_df_1$MSZoning), y = eda_df_1$SalePrice, posthoc = "games-howell")
eda_df_1[which((eda_df_1$MSZoning == 'RH') | (eda_df_1$MSZoning == 'RM') | (eda_df_1$MSZoning == 'C (all)')),'MSZoning'] <- 'C or RM or RH'
oneway(as.factor(eda_df_1$MSZoning), y = eda_df_1$SalePrice, posthoc = "games-howell")
bartlett.test(eda_df_1$SalePrice~eda_df_1$MSSubClass)
bartlett.test(eda_df_1$SalePrice~eda_df_1$MSSubClass)
oneway.test(SalePrice~MSZoning, data = eda_df_1, var.equal = F)
oneway(as.factor(eda_df_1$MSZoning), y = eda_df_1$SalePrice, posthoc = "games-howell")
